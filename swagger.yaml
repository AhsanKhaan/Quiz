openapi: 3.0.0
info:
    title: 'Quiz Application'
    version: 1.0.0
    description: 'API documentation for your Node.js application'
basePath: /
paths:
    /api/v1/auth/users: {get: {summary: 'Get logged-in user data', tags: [Authentication], security: [{BearerAuth: []}], responses: {'200': {description: 'Successful response', content: {application/json: {example: {_id: 603ddca3fd6e1d396055bee0, name: 'John Doe', email: john@example.com, createdAt: '2022-02-01T10:00:00.000Z', updatedAt: '2022-02-01T12:00:00.000Z'}}}}, '401': {description: Unauthorized}, '500': {description: 'Internal server error'}}}}
    /api/v1/questions: {get: {summary: 'Get all questions', tags: [Questions], security: [{BearerAuth: []}], responses: {'200': {description: 'Successful response', content: {application/json: {example: {questions: [{text: 'What is your question?', options: [...]}], totalCount: 10}}}}, '401': {description: Unauthorized}, '500': {description: 'Internal server error'}}}}
    /api/v1/questions/create: {post: {summary: 'Create a new question', tags: [Questions], security: [{BearerAuth: []}], requestBody: {required: true, content: {application/json: {example: {text: 'What is your question?', options: [{id: 1, text: 'Option 1'}, {id: 2, text: 'Option 2'}], correctOption: [1], courseType: Math}}}}, responses: {'200': {description: 'Successful response', content: {application/json: {example: {msg: 'Question inserted Successfully! in course: Math'}}}}, '400': {description: 'Bad Request'}, '500': {description: 'Internal server error'}}}}
    /api/v1/questions/check-answers: {post: {summary: 'Check user answers', tags: [Questions], security: [{BearerAuth: []}], requestBody: {required: true, content: {application/json: {example: {userResponses: [{questionId: '123', selectedOptions: [1]}], courseType: Math}}}}, responses: {'200': {description: 'Successful response', content: {application/json: {example: {Obtain: 20, Total: 30, percentage: 66.67%, Remarks: Good!}}}}, '400': {description: 'Bad Request'}, '500': {description: 'Internal server error'}}}}
components: {}
tags:
    - {name: Authentication, description: 'User authentication and profile retrieval'}
    - {name: Questions, description: 'API operations related to questions'}
